Terminals unused in grammar

   LOW
   HIGH


Grammar

    0 $accept: program $end

    1 program: block

    2 stmts: stmt stmts
    3      | stmt

    4 block: LB stmts RB

    5 stmt: id ASSIGN exp SEMICOLON
    6     | exp SEMICOLON
    7     | block

    8 exp: LP exp RP
    9    | exp ADD exp
   10    | exp SUB exp
   11    | exp MUL exp
   12    | exp DIV exp
   13    | NUM
   14    | id

   15 id: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
LP (258) 8
RP (259) 8
ADD (260) 9
SUB (261) 10
MUL (262) 11
DIV (263) 12
ASSIGN (264) 5
SEMICOLON (265) 5 6
LB (266) 4
RB (267) 4
NUM (268) 13
ID (269) 15
LOW (270)
HIGH (271)


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
program (18)
    on left: 1, on right: 0
stmts (19)
    on left: 2 3, on right: 2 4
block (20)
    on left: 4, on right: 1 7
stmt (21)
    on left: 5 6 7, on right: 2 3
exp (22)
    on left: 8 9 10 11 12 13 14, on right: 5 6 8 9 10 11 12
id (23)
    on left: 15, on right: 5 14


state 0

    0 $accept: . program $end

    LB  shift, and go to state 1

    program  go to state 2
    block    go to state 3


state 1

    4 block: LB . stmts RB

    LP   shift, and go to state 4
    LB   shift, and go to state 1
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    stmts  go to state 7
    block  go to state 8
    stmt   go to state 9
    exp    go to state 10
    id     go to state 11


state 2

    0 $accept: program . $end

    $end  shift, and go to state 12


state 3

    1 program: block .

    $default  reduce using rule 1 (program)


state 4

    8 exp: LP . exp RP

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 13
    id   go to state 14


state 5

   13 exp: NUM .

    $default  reduce using rule 13 (exp)


state 6

   15 id: ID .

    $default  reduce using rule 15 (id)


state 7

    4 block: LB stmts . RB

    RB  shift, and go to state 15


state 8

    7 stmt: block .

    $default  reduce using rule 7 (stmt)


state 9

    2 stmts: stmt . stmts
    3      | stmt .

    LP   shift, and go to state 4
    LB   shift, and go to state 1
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    $default  reduce using rule 3 (stmts)

    stmts  go to state 16
    block  go to state 8
    stmt   go to state 9
    exp    go to state 10
    id     go to state 11


state 10

    6 stmt: exp . SEMICOLON
    9 exp: exp . ADD exp
   10    | exp . SUB exp
   11    | exp . MUL exp
   12    | exp . DIV exp

    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    MUL        shift, and go to state 19
    DIV        shift, and go to state 20
    SEMICOLON  shift, and go to state 21


state 11

    5 stmt: id . ASSIGN exp SEMICOLON
   14 exp: id .

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 14 (exp)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    8 exp: LP exp . RP
    9    | exp . ADD exp
   10    | exp . SUB exp
   11    | exp . MUL exp
   12    | exp . DIV exp

    RP   shift, and go to state 23
    ADD  shift, and go to state 17
    SUB  shift, and go to state 18
    MUL  shift, and go to state 19
    DIV  shift, and go to state 20


state 14

   14 exp: id .

    $default  reduce using rule 14 (exp)


state 15

    4 block: LB stmts RB .

    $default  reduce using rule 4 (block)


state 16

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


state 17

    9 exp: exp ADD . exp

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 24
    id   go to state 14


state 18

   10 exp: exp SUB . exp

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 25
    id   go to state 14


state 19

   11 exp: exp MUL . exp

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 26
    id   go to state 14


state 20

   12 exp: exp DIV . exp

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 27
    id   go to state 14


state 21

    6 stmt: exp SEMICOLON .

    $default  reduce using rule 6 (stmt)


state 22

    5 stmt: id ASSIGN . exp SEMICOLON

    LP   shift, and go to state 4
    NUM  shift, and go to state 5
    ID   shift, and go to state 6

    exp  go to state 28
    id   go to state 14


state 23

    8 exp: LP exp RP .

    $default  reduce using rule 8 (exp)


state 24

    9 exp: exp . ADD exp
    9    | exp ADD exp .
   10    | exp . SUB exp
   11    | exp . MUL exp
   12    | exp . DIV exp

    MUL  shift, and go to state 19
    DIV  shift, and go to state 20

    $default  reduce using rule 9 (exp)


state 25

    9 exp: exp . ADD exp
   10    | exp . SUB exp
   10    | exp SUB exp .
   11    | exp . MUL exp
   12    | exp . DIV exp

    MUL  shift, and go to state 19
    DIV  shift, and go to state 20

    $default  reduce using rule 10 (exp)


state 26

    9 exp: exp . ADD exp
   10    | exp . SUB exp
   11    | exp . MUL exp
   11    | exp MUL exp .
   12    | exp . DIV exp

    $default  reduce using rule 11 (exp)


state 27

    9 exp: exp . ADD exp
   10    | exp . SUB exp
   11    | exp . MUL exp
   12    | exp . DIV exp
   12    | exp DIV exp .

    $default  reduce using rule 12 (exp)


state 28

    5 stmt: id ASSIGN exp . SEMICOLON
    9 exp: exp . ADD exp
   10    | exp . SUB exp
   11    | exp . MUL exp
   12    | exp . DIV exp

    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    MUL        shift, and go to state 19
    DIV        shift, and go to state 20
    SEMICOLON  shift, and go to state 29


state 29

    5 stmt: id ASSIGN exp SEMICOLON .

    $default  reduce using rule 5 (stmt)
